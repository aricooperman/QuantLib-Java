/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class PiecewiseZeroSpreadedTermStructure extends YieldTermStructure {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected PiecewiseZeroSpreadedTermStructure(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.PiecewiseZeroSpreadedTermStructure_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PiecewiseZeroSpreadedTermStructure obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_PiecewiseZeroSpreadedTermStructure(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PiecewiseZeroSpreadedTermStructure(YieldTermStructureHandle curveHandle, QuoteHandleVector spreadHandles, DateVector dates, Compounding comp, Frequency freq, DayCounter dc, Linear factory) {
    this(QuantLibJNI.new_PiecewiseZeroSpreadedTermStructure__SWIG_0(YieldTermStructureHandle.getCPtr(curveHandle), curveHandle, QuoteHandleVector.getCPtr(spreadHandles), spreadHandles, DateVector.getCPtr(dates), dates, comp.swigValue(), freq.swigValue(), DayCounter.getCPtr(dc), dc, Linear.getCPtr(factory), factory), true);
  }

  public PiecewiseZeroSpreadedTermStructure(YieldTermStructureHandle curveHandle, QuoteHandleVector spreadHandles, DateVector dates, Compounding comp, Frequency freq, DayCounter dc) {
    this(QuantLibJNI.new_PiecewiseZeroSpreadedTermStructure__SWIG_1(YieldTermStructureHandle.getCPtr(curveHandle), curveHandle, QuoteHandleVector.getCPtr(spreadHandles), spreadHandles, DateVector.getCPtr(dates), dates, comp.swigValue(), freq.swigValue(), DayCounter.getCPtr(dc), dc), true);
  }

  public PiecewiseZeroSpreadedTermStructure(YieldTermStructureHandle curveHandle, QuoteHandleVector spreadHandles, DateVector dates, Compounding comp, Frequency freq) {
    this(QuantLibJNI.new_PiecewiseZeroSpreadedTermStructure__SWIG_2(YieldTermStructureHandle.getCPtr(curveHandle), curveHandle, QuoteHandleVector.getCPtr(spreadHandles), spreadHandles, DateVector.getCPtr(dates), dates, comp.swigValue(), freq.swigValue()), true);
  }

  public PiecewiseZeroSpreadedTermStructure(YieldTermStructureHandle curveHandle, QuoteHandleVector spreadHandles, DateVector dates, Compounding comp) {
    this(QuantLibJNI.new_PiecewiseZeroSpreadedTermStructure__SWIG_3(YieldTermStructureHandle.getCPtr(curveHandle), curveHandle, QuoteHandleVector.getCPtr(spreadHandles), spreadHandles, DateVector.getCPtr(dates), dates, comp.swigValue()), true);
  }

  public PiecewiseZeroSpreadedTermStructure(YieldTermStructureHandle curveHandle, QuoteHandleVector spreadHandles, DateVector dates) {
    this(QuantLibJNI.new_PiecewiseZeroSpreadedTermStructure__SWIG_4(YieldTermStructureHandle.getCPtr(curveHandle), curveHandle, QuoteHandleVector.getCPtr(spreadHandles), spreadHandles, DateVector.getCPtr(dates), dates), true);
  }

}
